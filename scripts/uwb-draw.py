import re
import matplotlib.pyplot as plt
from collections import defaultdict

# Replace this string with your UWB data or load from a file
data    = """
3 -> 4: -0.670
4 -> 6: 2.542
6 -> 7: -2.069
7 -> 0: -0.703
0 -> 1: 1.435
3 -> 4: -0.638
4 -> 6: 2.599
6 -> 7: -2.125
7 -> 0: -0.797
0 -> 1: 1.318
1 -> 3: -0.300
3 -> 4: -0.760
4 -> 6: 2.542
6 -> 7: -2.069
7 -> 0: -0.694
0 -> 1: 1.360
3 -> 4: -0.478
4 -> 6: 2.463
6 -> 7: -2.223
7 -> 0: -0.656
0 -> 1: 1.374
1 -> 3: -0.370
3 -> 4: -0.516
4 -> 6: 2.388
7 -> 0: -0.774
0 -> 1: 1.219
1 -> 3: -0.426
3 -> 4: -0.619
4 -> 6: 2.458
6 -> 0: -2.815
0 -> 1: 1.355
1 -> 3: -0.319
3 -> 4: -0.581
4 -> 6: 2.477
7 -> 0: -0.933
0 -> 1: 1.238
1 -> 3: -0.403
3 -> 4: -0.534
4 -> 6: 2.341
6 -> 7: -1.796
7 -> 0: -0.858
0 -> 1: 1.299
1 -> 3: -0.145
3 -> 4: -0.558
4 -> 6: 2.392
6 -> 7: -1.731
7 -> 0: -1.172
0 -> 1: 1.036
1 -> 3: -0.234
3 -> 4: -0.619
4 -> 6: 2.378
6 -> 7: -1.679
0 -> 1: 1.407
1 -> 3: 0.023
3 -> 4: -0.581
7 -> 0: -1.111
6 -> 7: -1.895
7 -> 0: -1.172
0 -> 1: 1.327
1 -> 3: -0.009
3 -> 4: -0.961
4 -> 6: 2.674
6 -> 7: -1.703
7 -> 0: -1.135
0 -> 1: 1.360
1 -> 3: 0.079
3 -> 4: -1.004
4 -> 6: 2.768
6 -> 7: -2.040
7 -> 0: -0.980
0 -> 1: 0.999
3 -> 4: -0.943
6 -> 7: -1.904
7 -> 0: -1.177
1 -> 3: 0.004
3 -> 4: -0.802
4 -> 6: 2.599
6 -> 7: -1.829
7 -> 0: -0.985
0 -> 1: 1.083
1 -> 3: 0.028
4 -> 6: 2.749
6 -> 7: -1.965
7 -> 0: -0.980
0 -> 1: 1.102
1 -> 3: 0.079
3 -> 4: -0.849
4 -> 6: 2.678
6 -> 7: -1.872
7 -> 0: -1.041
0 -> 1: 1.210
1 -> 3: -0.065
4 -> 6: 2.777
6 -> 7: -2.003
7 -> 0: -1.036
0 -> 1: 1.201
1 -> 3: -0.103
3 -> 4: -0.825
4 -> 6: 2.683
6 -> 7: -1.904
7 -> 0: -1.111
0 -> 1: 1.154
1 -> 3: -0.126
3 -> 4: -0.806
4 -> 6: 2.735
6 -> 7: -1.740
7 -> 0: -1.116
0 -> 1: 1.341
1 -> 3: -0.159
3 -> 4: -0.853
4 -> 6: 2.772
6 -> 7: -1.834
7 -> 0: -1.205
0 -> 1: 1.299
1 -> 3: -0.154
3 -> 4: -0.811
4 -> 6: 2.660
6 -> 7: -1.839
7 -> 0: -1.130
0 -> 1: 1.365
1 -> 3: -0.126
3 -> 4: -0.760
4 -> 6: 2.646
6 -> 7: -1.787
7 -> 0: -1.374
0 -> 1: 1.369
1 -> 3: -0.234
3 -> 4: -0.811
4 -> 6: 2.627
6 -> 7: -1.787
7 -> 0: -1.182
0 -> 1: 1.501
1 -> 3: -0.150
3 -> 4: -0.764
4 -> 6: 2.707
6 -> 7: -1.839
7 -> 0: -1.229
0 -> 1: 1.341
1 -> 3: -0.187
3 -> 4: -0.713
4 -> 6: 2.702
6 -> 7: -1.900
0 -> 1: 0.933
3 -> 4: -0.867
4 -> 6: 2.594
6 -> 7: -1.815
7 -> 0: -0.675
0 -> 1: 1.022
1 -> 3: -0.009
3 -> 4: -0.821
4 -> 6: 2.589
6 -> 7: -1.750
7 -> 0: -0.919
0 -> 1: 0.975<F>
1 -> 3: -0.028
1 -> 4: -0.778<F>
4 -> 0: -0.525
0 -> 1: 1.313
1 -> 4: -0.727
4 -> 6: 2.721
6 -> 7: -1.815
7 -> 0: -1.346
0 -> 1: 1.280
1 -> 3: 0.089
3 -> 4: -0.975
4 -> 6: 2.636
6 -> 7: -1.684
7 -> 1: -0.112
1 -> 3: 0.234
3 -> 4: -0.961
4 -> 6: 2.594
6 -> 7: -1.750
7 -> 1: -0.070
1 -> 4: -0.788
4 -> 6: 2.580
6 -> 7: -2.214
7 -> 0: -1.201
0 -> 1: 1.384
4 -> 6: 2.749
6 -> 7: -1.693
7 -> 1: -0.056
1 -> 3: 0.220
3 -> 4: -0.985
4 -> 6: 2.669
6 -> 1: -1.942
1 -> 3: 0.182
3 -> 4: -0.966
6 -> 7: -1.689
7 -> 0: -1.060
0 -> 1: 1.379
1 -> 4: -0.821
4 -> 7: 0.755
7 -> 0: -1.543
0 -> 1: 1.346
1 -> 3: 0.192
3 -> 4: -1.022
4 -> 6: 2.725
6 -> 7: -1.975
7 -> 0: -1.238
0 -> 1: 1.468
1 -> 3: 0.159
3 -> 4: -0.900
4 -> 3: 0.928
3 -> 1: -0.079
1 -> 4: -0.821
4 -> 0: -0.577
0 -> 3: 1.571
3 -> 0: -1.595
7 -> 1: -0.051
1 -> 3: 0.112
3 -> 4: -0.919
4 -> 7: 0.745
7 -> 3: 0.192
3 -> 6: 1.754
6 -> 0: -3.251
0 -> 3: 1.581
3 -> 4: -0.919
4 -> 6: 2.627
6 -> 1: -1.872
1 -> 3: 0.089
3 -> 4: -0.938
4 -> 6: 2.552
6 -> 1: -1.806
1 -> 3: 0.182
6 -> 1: -1.886
1 -> 4: -0.835
4 -> 6: 2.763
0 -> 1: 1.332
1 -> 3: 0.215
3 -> 4: -0.891
4 -> 0: -0.567
6 -> 7: -2.040
7 -> 0: -1.473
0 -> 6: 3.387
6 -> 0: -3.288
3 -> 6: 1.623
6 -> 0: -3.185
0 -> 6: 3.251
6 -> 0: -3.349
7 -> 1: 0.060
1 -> 3: 0.051
3 -> 7: -0.126
7 -> 1: 0.112
1 -> 3: 0.084
3 -> 7: -0.206
7 -> 1: 0.089
1 -> 3: 0.225
0 -> 7: 0.609
7 -> 3: 0.234
3 -> 7: -0.286
7 -> 1: 0.089
1 -> 3: 0.112
3 -> 7: -0.258
7 -> 1: 0.089
1 -> 3: 0.192
3 -> 7: -0.262
0 -> 1: 1.407
1 -> 3: 0.093
7 -> 0: -1.107
0 -> 4: 0.497
6 -> 0: -3.152
0 -> 4: 0.511
4 -> 6: 2.585
6 -> 0: -3.270
3 -> 0: -1.552
0 -> 3: 1.426
6 -> 0: -3.152
4 -> 7: 0.788
1 -> 4: -0.905
4 -> 6: 2.674
6 -> 7: -1.947
7 -> 1: 0.037
1 -> 3: 0.028
3 -> 7: -0.140
7 -> 1: 0.070
1 -> 3: 0.051
3 -> 7: -0.093
7 -> 1: 0.117
1 -> 3: 0.070
3 -> 4: -1.018
4 -> 1: 0.844
1 -> 3: 0.168
3 -> 4: -0.966
4 -> 7: 0.722
0 -> 7: 1.332
"""

data2 = """
6 -> 4: 2.601
7 -> 6: -1.833
0 -> 7: -1.197
1 -> 0: 1.431
3 -> 1: -0.112
4 -> 3: -0.707
7 -> 4: 0.604
0 -> 7: -1.242
1 -> 0: 1.465
3 -> 1: -0.096
4 -> 3: -0.717
7 -> 4: 0.663
0 -> 7: -1.383
1 -> 0: 1.287
3 -> 1: -0.050
4 -> 3: -0.601
6 -> 4: 2.657
7 -> 6: -1.997
0 -> 7: -1.196
1 -> 0: 1.385
4 -> 3: -0.882
7 -> 4: 0.636
0 -> 7: -1.158
1 -> 0: 1.383
3 -> 1: 0.031
6 -> 4: 2.441
7 -> 6: -1.906
0 -> 7: -1.200
1 -> 0: 1.401
3 -> 1: -0.209
4 -> 3: -0.649
6 -> 4: 2.644
7 -> 6: -1.953
0 -> 7: -1.188
1 -> 0: 1.324
3 -> 1: -0.127
4 -> 3: -0.692
6 -> 4: 2.629
7 -> 6: -1.833
0 -> 7: -1.330
1 -> 0: 1.559
3 -> 1: -0.079
0 -> 7: -1.194
1 -> 0: 1.305
3 -> 1: -0.175
4 -> 3: -0.639
6 -> 4: 2.598
7 -> 6: -2.009
0 -> 7: -1.474
1 -> 0: 1.393
4 -> 3: -0.570
6 -> 4: 2.559
0 -> 7: -1.221
1 -> 0: 1.387
3 -> 1: 0.019
4 -> 3: -0.755
6 -> 4: 2.513
0 -> 7: -1.259
1 -> 0: 1.378
3 -> 1: -0.059
4 -> 3: -0.637
6 -> 4: 2.446
7 -> 6: -1.699
0 -> 7: -1.398
1 -> 0: 1.455
3 -> 1: -0.124
IMU Calibration [OK]6 -> 4: 2.521
7 -> 6: -1.763
0 -> 7: -1.402
1 -> 0: 1.427
3 -> 1: -0.121
4 -> 3: -0.661
6 -> 4: 2.615
3 -> 1: -0.051
7 -> 6: -1.741
0 -> 7: -1.404
1 -> 0: 1.448
3 -> 1: -0.105
4 -> 3: -0.720
6 -> 4: 2.596
7 -> 6: -2.000
0 -> 7: -1.303
1 -> 0: 1.445
3 -> 1: 0.080
7 -> 6: -1.902
0 -> 7: -1.380
1 -> 0: 1.480
3 -> 1: -0.037
7 -> 6: -1.901
0 -> 7: -1.223
1 -> 0: 1.400
3 -> 1: -0.069
4 -> 3: -0.723
6 -> 4: 2.548
7 -> 6: -2.000
0 -> 7: -1.321
1 -> 0: 1.464
3 -> 1: -0.028
4 -> 3: -0.821
6 -> 4: 2.569
7 -> 6: -1.629
0 -> 7: -1.375
1 -> 0: 1.452
3 -> 1: -0.003
4 -> 3: -0.776
6 -> 4: 2.723
7 -> 6: -2.032
0 -> 7: -1.286
1 -> 0: 1.540
3 -> 1: -0.077
4 -> 3: -0.747
6 -> 4: 2.578
7 -> 6: -1.987
0 -> 7: -1.335
3 -> 1: 0.062
4 -> 3: -0.764
6 -> 4: 2.620
7 -> 6: -1.931
0 -> 7: -1.430
1 -> 0: 1.417
3 -> 1: -0.057
4 -> 3: -0.637
6 -> 4: 2.497
7 -> 6: -2.016
0 -> 7: -1.278
1 -> 0: 1.305
3 -> 1: -0.064
4 -> 3: -0.677
6 -> 4: 2.719
7 -> 6: -2.094
0 -> 7: -1.054
1 -> 0: 1.445
3 -> 1: -0.006
4 -> 3: -0.700
6 -> 4: 2.593
7 -> 6: -1.979
0 -> 7: -1.457
1 -> 0: 1.405
3 -> 1: 0.042
4 -> 3: -0.843
6 -> 4: 2.610
7 -> 6: -1.937
0 -> 7: -1.199
1 -> 0: 1.330
3 -> 1: -0.057
6 -> 4: 2.523
7 -> 6: -1.866
0 -> 7: -1.204
1 -> 0: 1.365
3 -> 1: 0.062
4 -> 3: -0.726
6 -> 4: 2.685
7 -> 6: -1.947
0 -> 7: -1.338
1 -> 0: 1.411
3 -> 1: -0.039
4 -> 3: -0.726
6 -> 4: 2.702
7 -> 6: -1.923
0 -> 7: -1.428
1 -> 0: 1.320
3 -> 1: 0.003
4 -> 3: -0.712
6 -> 4: 2.583
7 -> 6: -1.921
0 -> 7: -1.286
1 -> 0: 1.323
3 -> 1: 0.064
4 -> 3: -0.624
6 -> 4: 2.556
7 -> 6: -1.912
0 -> 7: -1.243
1 -> 0: 1.387
3 -> 1: 0.103
4 -> 3: -0.738
6 -> 4: 2.674
7 -> 6: -2.095
0 -> 7: -1.471
1 -> 0: 1.488
3 -> 1: 0.000
4 -> 3: -0.760
6 -> 4: 2.599
0 -> 7: -1.205
1 -> 0: 1.302
3 -> 1: 0.084
4 -> 3: -0.614
6 -> 4: 2.431
7 -> 6: -1.805
0 -> 7: -1.322
1 -> 0: 1.274
3 -> 1: 0.020
6 -> 4: 2.666
0 -> 7: -1.215
1 -> 0: 1.334
3 -> 1: 0.028
4 -> 3: -0.666
7 -> 6: -1.855
0 -> 7: -1.306
1 -> 0: 1.360
3 -> 1: 0.081
4 -> 3: -0.678
6 -> 4: 2.580
7 -> 6: -1.869
0 -> 7: -1.420
1 -> 0: 1.371
3 -> 1: 0.045
4 -> 3: -0.919
6 -> 4: 2.606
7 -> 6: -1.952
0 -> 7: -1.431
1 -> 0: 1.257
3 -> 1: 0.187
4 -> 3: -0.725
6 -> 4: 2.614
7 -> 6: -1.871
0 -> 7: -1.374
3 -> 1: -0.025
4 -> 3: -0.649
6 -> 4: 2.589
7 -> 6: -1.780
0 -> 7: -1.297
1 -> 0: 1.307
3 -> 1: -0.045
4 -> 3: -0.605
6 -> 4: 2.483
7 -> 6: -1.973
0 -> 7: -1.341
1 -> 0: 1.300
3 -> 1: -0.051
7 -> 4: 0.776
0 -> 7: -1.362
1 -> 0: 1.341
3 -> 1: 0.038
4 -> 3: -0.742
6 -> 4: 2.595
7 -> 6: -1.773
0 -> 7: -1.389
1 -> 0: 1.367
3 -> 1: -0.046
6 -> 4: 2.720
0 -> 7: -1.400
1 -> 0: 1.544
3 -> 1: 0.075
4 -> 3: -0.893
6 -> 4: 2.885
7 -> 6: -2.088
0 -> 7: -1.372
1 -> 0: 1.467
3 -> 1: 0.063
4 -> 3: -0.842
7 -> 6: -1.847
0 -> 7: -1.405
1 -> 0: 1.383
3 -> 1: 0.003
4 -> 3: -0.811
6 -> 4: 2.667
7 -> 6: -1.904
0 -> 7: -1.234
1 -> 0: 1.334
3 -> 1: 0.070
6 -> 4: 2.747
7 -> 6: -1.904
0 -> 7: -1.393
1 -> 0: 1.396
3 -> 1: -0.004
4 -> 3: -0.870
6 -> 4: 2.640
7 -> 6: -1.674
0 -> 7: -1.501
1 -> 0: 1.395
3 -> 1: 0.018
6 -> 4: 2.809
7 -> 6: -2.253
0 -> 7: -1.314
1 -> 0: 1.464
3 -> 1: 0.012
4 -> 3: -0.750
6 -> 4: 2.682
7 -> 6: -2.010
0 -> 7: -1.378
1 -> 0: 1.303
3 -> 1: 0.022
4 -> 3: -0.744
6 -> 4: 2.580
7 -> 6: -1.847
0 -> 7: -1.283
1 -> 0: 1.364
3 -> 1: 0.030
4 -> 3: -0.733
6 -> 4: 2.554
7 -> 6: -1.936
0 -> 7: -1.480
1 -> 0: 1.505
3 -> 1: -0.008
6 -> 4: 2.798
7 -> 6: -1.666
0 -> 7: -1.390
1 -> 0: 1.402
3 -> 1: 0.025
4 -> 3: -0.843
6 -> 4: 2.706
7 -> 6: -1.844
0 -> 7: -1.497
1 -> 0: 1.461
3 -> 1: 0.022
6 -> 4: 2.775
7 -> 6: -1.827
0 -> 7: -1.458
1 -> 0: 1.412
3 -> 1: 0.040
4 -> 3: -0.833
6 -> 4: 2.674
7 -> 6: -2.099
0 -> 7: -1.288
1 -> 0: 1.455
3 -> 1: -0.061
4 -> 3: -0.827
6 -> 4: 2.757
7 -> 6: -1.967
0 -> 7: -1.471
1 -> 0: 1.503
3 -> 1: -0.029
4 -> 3: -0.821
6 -> 4: 2.742
7 -> 6: -1.730
0 -> 7: -1.276
1 -> 0: 1.440
3 -> 1: -0.023
4 -> 3: -0.868
6 -> 4: 2.690
7 -> 6: -1.994
0 -> 7: -1.407
1 -> 0: 1.480
3 -> 1: 0.002
4 -> 3: -0.885
6 -> 4: 2.716
7 -> 6: -1.785
1 -> 0: 1.409
3 -> 1: -0.018
4 -> 3: -0.875
6 -> 4: 2.769
7 -> 6: -1.847
0 -> 7: -1.483
1 -> 0: 1.458
3 -> 1: 0.014
4 -> 3: -0.879
6 -> 4: 2.790
7 -> 6: -1.862
1 -> 0: 1.338
3 -> 1: 0.018
4 -> 3: -0.918
6 -> 4: 2.755
7 -> 6: -1.828
0 -> 7: -1.208
1 -> 0: 1.422
3 -> 1: 0.032
4 -> 3: -0.946
6 -> 4: 2.742
7 -> 6: -1.826
0 -> 7: -1.386
1 -> 0: 1.411
3 -> 1: -0.094
4 -> 3: -0.939
7 -> 6: -1.925
0 -> 7: -1.250
4 -> 3: -0.878
6 -> 4: 2.859
7 -> 6: -1.941
0 -> 7: -1.289
1 -> 0: 1.606
3 -> 1: -0.055
4 -> 3: -0.889
6 -> 4: 2.735
7 -> 6: -1.793
0 -> 7: -1.321
1 -> 0: 1.505
3 -> 1: 0.022
4 -> 3: -0.912
6 -> 4: 2.692
7 -> 6: -1.802
0 -> 7: -1.350
1 -> 0: 1.421
3 -> 1: -0.003
4 -> 3: -0.860
6 -> 4: 2.754
7 -> 6: -2.008
0 -> 7: -1.498
1 -> 0: 1.464
3 -> 1: -0.114
4 -> 3: -0.888
6 -> 4: 2.906
7 -> 6: -2.007
0 -> 7: -1.298
1 -> 0: 1.514
3 -> 1: -0.089
6 -> 4: 2.796
7 -> 6: -1.751
1 -> 0: 1.367
3 -> 1: 0.032
4 -> 3: -0.846
6 -> 4: 2.667
7 -> 6: -1.960
0 -> 7: -1.523
1 -> 0: 1.372
3 -> 1: 0.059
4 -> 3: -0.911
6 -> 4: 2.743
7 -> 6: -1.979
0 -> 7: -1.522
3 -> 1: -0.063
4 -> 3: -0.823
6 -> 4: 2.719
7 -> 6: -1.805
0 -> 7: -1.482
1 -> 0: 1.483
3 -> 1: -0.084
4 -> 3: -1.014
6 -> 4: 2.803
7 -> 6: -1.810
0 -> 7: -1.282
1 -> 0: 1.537
3 -> 1: -0.054
4 -> 3: -0.792
6 -> 4: 2.814
7 -> 6: -1.977
0 -> 7: -1.381
1 -> 0: 1.451
3 -> 1: -0.063
4 -> 3: -0.961
6 -> 4: 2.798
7 -> 6: -1.670
0 -> 7: -1.511
1 -> 0: 1.440
3 -> 1: -0.037
4 -> 3: -0.924
7 -> 6: -1.785
0 -> 7: -1.429
1 -> 0: 1.419
3 -> 1: -0.104
4 -> 3: -0.943
6 -> 4: 2.715
7 -> 6: -1.818
0 -> 7: -1.286
1 -> 0: 1.460
3 -> 1: 0.035
4 -> 3: -0.739
6 -> 4: 2.834
7 -> 6: -2.035
0 -> 7: -1.352
3 -> 1: -0.095
4 -> 3: -0.897
6 -> 4: 2.702
7 -> 6: -1.842
0 -> 7: -1.415
1 -> 0: 1.461
3 -> 1: -0.030
4 -> 3: -0.775
6 -> 4: 2.714
7 -> 6: -1.982
0 -> 7: -1.232
1 -> 0: 1.409
3 -> 1: -0.035
4 -> 3: -0.894
7 -> 6: -1.695
0 -> 7: -1.478
1 -> 0: 1.367
3 -> 1: -0.075
4 -> 3: -0.914
6 -> 4: 2.713
7 -> 6: -2.119
0 -> 7: -1.213
1 -> 0: 1.418
3 -> 1: -0.032
4 -> 3: -0.838
6 -> 4: 2.791
7 -> 6: -1.883
0 -> 7: -1.457
1 -> 0: 1.354
3 -> 1: 0.020
4 -> 3: -0.944
6 -> 4: 2.768
7 -> 6: -1.635
0 -> 7: -1.181
1 -> 0: 1.366
3 -> 1: 0.031
4 -> 3: -0.817
6 -> 4: 2.648
7 -> 6: -2.016
0 -> 7: -1.408
1 -> 0: 1.495
3 -> 1: -0.056
4 -> 3: -0.828
7 -> 4: 0.883
0 -> 7: -1.310
1 -> 0: 1.511
3 -> 1: -0.080
4 -> 3: -0.866
6 -> 4: 2.722
7 -> 6: -1.838
0 -> 7: -1.357
1 -> 0: 1.473
3 -> 1: 0.123
4 -> 3: -0.968
6 -> 4: 2.734
7 -> 6: -1.698
0 -> 7: -1.519
1 -> 0: 1.475
4 -> 3: -0.814
6 -> 4: 2.695
7 -> 6: -2.067
0 -> 7: -1.250
1 -> 0: 1.422
3 -> 1: -0.106
6 -> 4: 2.781
7 -> 6: -1.916
0 -> 7: -1.603
1 -> 0: 1.373
3 -> 1: -0.007
4 -> 3: -0.825
6 -> 4: 2.825
7 -> 6: -1.881
0 -> 7: -1.309
1 -> 0: 1.361
3 -> 1: -0.065
4 -> 3: -0.821
6 -> 4: 2.765
7 -> 6: -1.887
0 -> 7: -1.438
1 -> 0: 1.424
3 -> 1: -0.024
4 -> 3: -1.053
6 -> 4: 2.815
7 -> 6: -1.80
"""

# Parse the data
pattern = re.compile(r"(\d+)\s*->\s*(\d+):\s*(-?\d+\.\d+)")
parsed_data = pattern.findall(data2)

# Store distances per ID pair
distances = defaultdict(list)
sequence_index = defaultdict(int)

for id1, id2, dist in parsed_data:
    id1, id2 = int(id1), int(id2)
    key = f"{id1}->{id2}"
    value = float(dist)
    
    # Enforce negative if id2 < id1, even if data says otherwise
    if id2 < id1:
        value = -abs(value)
    else:
        value = abs(value)
    
    distances[key].append(value)

# Plotting
plt.figure(figsize=(10, 6))
for key, values in distances.items():
    plt.plot(range(len(values)), values, marker='o', label=key)

plt.xlabel('Measurement Index')
plt.ylabel('Distance')
plt.title('Distances Between ID Pairs Over Time')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()