import re
import matplotlib.pyplot as plt
from collections import defaultdict

# Replace this string with your UWB data or load from a file
data    = """
0 -> 3: 0.502
3 -> 4: 0.337
4 -> 0: -0.914
0 -> 3: 0.609
3 -> 4: 0.248
4 -> 0: -0.863
0 -> 3: 0.595
3 -> 4: 0.361
4 -> 0: -0.989
0 -> 3: 0.619
3 -> 4: 0.516
4 -> 0: -0.975
0 -> 3: 0.502
3 -> 4: 0.455
4 -> 0: -0.858
0 -> 3: 0.384
0 -> 3: 0.567
3 -> 4: 0.248
4 -> 0: -0.783
3 -> 4: 0.337
0 -> 3: 0.412
3 -> 4: 0.483
0 -> 3: 0.441
3 -> 4: 0.398
0 -> 3: 0.473
3 -> 4: 0.328
0 -> 3: 0.619
3 -> 4: 0.408
4 -> 0: -0.938
0 -> 3: 0.356
3 -> 4: 0.361
0 -> 3: 0.638
3 -> 4: 0.309
4 -> 0: -0.914
0 -> 3: 0.459
4 -> 0: -0.792
0 -> 3: 0.492
3 -> 4: 0.126
4 -> 0: -0.689
0 -> 3: 0.502
3 -> 4: 0.342
4 -> 0: -0.811
0 -> 4: 0.806
4 -> 0: -0.853
0 -> 3: 0.516
3 -> 4: 0.309
4 -> 0: -0.886
0 -> 3: 0.426
3 -> 4: 0.563
4 -> 0: -0.835
0 -> 3: 0.384
3 -> 4: 0.295
0 -> 3: 0.525
3 -> 4: 0.384
4 -> 0: -0.727
2 -> 3: -1.867
3 -> 4: 0.351
0 -> 2: 0.844
2 -> 4: -1.524
4 -> 0: -0.853
0 -> 3: 0.525
3 -> 4: 0.220
4 -> 0: -0.849
0 -> 3: 0.633
3 -> 4: 0.408
4 -> 0: -0.825
0 -> 3: 0.441
3 -> 4: 0.229
0 -> 3: 0.581
3 -> 4: 0.441
4 -> 0: -1.079
0 -> 4: 0.947
4 -> 0: -0.774
0 -> 4: 0.938
4 -> 0: -0.830
4 -> 1: -1.698
4 -> 0: -0.933
0 -> 4: 0.975
0 -> 4: 0.863
4 -> 0: -0.788
0 -> 4: 0.802
4 -> 0: -0.821
0 -> 4: 0.802
4 -> 0: -0.839
0 -> 4: 0.849
4 -> 0: -0.806
0 -> 4: 0.788
0 -> 4: 0.900
4 -> 0: -0.914
0 -> 4: 0.816
4 -> 0: -0.900
0 -> 4: 0.858
4 -> 0: -0.914
0 -> 4: 0.924
0 -> 3: 0.323
0 -> 3: 0.624
3 -> 4: 0.253
0 -> 3: 0.417
3 -> 4: 0.431
0 -> 3: 0.464
3 -> 4: 0.412
0 -> 3: 0.441
3 -> 4: 0.445
0 -> 3: 0.412
3 -> 4: 0.365
4 -> 0: -0.891
0 -> 3: 0.539
3 -> 4: 0.464
4 -> 0: -0.821
0 -> 4: 0.844
4 -> 0: -0.905
0 -> 3: 0.558
0 -> 3: 0.591
3 -> 4: 0.262
4 -> 0: -0.905
3 -> 4: 0.356
4 -> 0: -0.891
3 -> 4: 0.502
4 -> 0: -0.910
3 -> 4: 0.370
4 -> 0: -0.924
0 -> 3: 0.567
3 -> 4: 0.394
3 -> 4: 0.319
4 -> 0: -0.816
3 -> 4: 0.417
4 -> 0: -0.872
3 -> 4: 0.464
0 -> 3: 0.572
3 -> 4: 0.487
4 -> 0: -1.069
0 -> 3: 0.586
3 -> 4: 0.384
3 -> 4: 0.502
0 -> 3: 0.426
3 -> 4: 0.337
4 -> 0: -0.839
0 -> 3: 0.624
3 -> 4: 0.314
0 -> 3: 0.502
3 -> 4: 0.286
4 -> 0: -0.745
0 -> 3: 0.455
3 -> 4: 0.328
4 -> 0: -0.792
0 -> 3: 0.563
3 -> 4: 0.455
4 -> 0: -0.811
3 -> 4: 0.290
4 -> 0: -0.928
0 -> 3: 0.638
3 -> 4: 0.365
4 -> 0: -0.905
0 -> 3: 0.553
4 -> 0: -0.811
0 -> 3: 0.478
3 -> 4: 0.422
4 -> 0: -0.778
2 -> 3: -1.834
3 -> 4: 0.398
4 -> 0: -0.778
0 -> 2: 4.048
2 -> 3: -2.008
3 -> 4: 0.333
4 -> 0: -0.867
2 -> 3: -1.778
3 -> 4: 0.408
0 -> 2: 1.487
2 -> 3: -1.815
3 -> 4: 0.206
4 -> 0: -0.863
0 -> 2: 2.073
2 -> 3: -1.951
3 -> 4: 0.370
4 -> 2: 1.379
2 -> 3: -1.735
3 -> 4: 0.417
0 -> 3: 0.201
3 -> 4: 0.361
4 -> 0: -0.520
0 -> 3: 0.093
3 -> 4: 0.445
4 -> 0: -0.539
0 -> 3: 0.159
3 -> 4: 0.351
4 -> 0: -0.586
0 -> 3: 0.159
3 -> 4: 0.459
0 -> 4: 0.511
4 -> 0: -0.548
0 -> 4: 0.520
4 -> 0: -0.426
0 -> 4: 0.530
4 -> 0: -0.586
0 -> 4: 0.544
0 -> 4: 0.534
4 -> 0: -0.619
0 -> 4: 0.572
0 -> 4: 0.436
4 -> 0: -0.422
0 -> 4: 0.502
0 -> 4: 0.530
4 -> 0: -0.375
0 -> 4: 0.389
4 -> 0: -0.553
0 -> 4: 0.511
4 -> 0: -0.628
0 -> 4: 0.680
4 -> 0: -0.506
4 -> 0: -0.624
0 -> 4: 0.567
4 -> 0: -0.469
4 -> 0: -0.548
0 -> 4: 0.455
4 -> 0: -0.492
0 -> 1: -0.928
1 -> 4: 1.496
4 -> 0: -0.516
0 -> 1: -1.130
1 -> 4: 1.646
4 -> 0: -0.436
0 -> 1: -1.116
1 -> 4: 1.721
4 -> 0: -0.497
1 -> 4: 1.501
4 -> 0: -0.530
0 -> 1: -1.201
1 -> 4: 1.585
4 -> 0: -0.469
0 -> 1: -0.797
1 -> 4: 1.473
4 -> 0: -0.455
0 -> 1: -1.065
1 -> 4: 1.510
0 -> 1: -1.004
1 -> 4: 1.628
4 -> 0: -0.577
1 -> 4: 1.595
4 -> 0: -0.534
4 -> 1: -1.468
1 -> 4: 1.491
0 -> 4: 0.516
4 -> 0: -0.520
0 -> 4: 0.455
4 -> 0: -0.398
0 -> 4: 0.487
0 -> 4: 0.548
4 -> 0: -0.525
0 -> 4: 0.548
4 -> 0: -0.553
0 -> 4: 0.492
4 -> 0: -0.431
0 -> 4: 0.511
4 -> 0: -0.520
4 -> 0: -0.347
0 -> 4: 0.398
4 -> 0: -0.412
0 -> 4: 0.483
4 -> 0: -0.502
0 -> 4: 0.337
4 -> 0: -0.304
0 -> 4: 0.337
4 -> 0: -0.506
4 -> 0: -0.487
0 -> 4: 0.473
"""

data2 = """
1 -> 0: -0.448
4 -> 0: 1.300
0 -> 4: -1.280
1 -> 0: -0.418
4 -> 1: 1.799
1 -> 0: -0.714
4 -> 1: 1.724
0 -> 4: -1.353
4 -> 0: 1.301
0 -> 4: -1.254
4 -> 0: 1.252
0 -> 4: -1.290
4 -> 0: 1.348
0 -> 4: -1.402
4 -> 0: 1.312
0 -> 4: -1.249
4 -> 0: 1.300
4 -> 0: 1.379
0 -> 4: -1.334
4 -> 0: 1.288
0 -> 4: -1.280
4 -> 0: 1.368
0 -> 4: -1.373
1 -> 0: -0.658
4 -> 1: 1.750
0 -> 4: -1.325
4 -> 1: 1.749
4 -> 3: 0.917
1 -> 0: -0.544
4 -> 1: 1.781
1 -> 0: -0.434
4 -> 1: 1.747
0 -> 4: -1.283
1 -> 0: -0.426
4 -> 1: 1.723
0 -> 4: -1.279
1 -> 0: -0.534
4 -> 0: 1.235
0 -> 4: -1.257
1 -> 0: -0.606
4 -> 1: 1.775
4 -> 1: 1.785
0 -> 4: -1.321
4 -> 0: 1.313
4 -> 0: 1.250
0 -> 4: -1.261
4 -> 0: 1.387
1 -> 4: -1.797
4 -> 1: 1.759
4 -> 0: 1.337
0 -> 4: -1.246
4 -> 0: 1.194
0 -> 4: -1.229
1 -> 0: -0.468
4 -> 1: 1.787
0 -> 4: -1.344
1 -> 0: -0.384
4 -> 0: 1.344
4 -> 1: 1.956
0 -> 4: -1.338
1 -> 0: -0.387
4 -> 1: 1.772
1 -> 0: -0.281
4 -> 1: 1.811
0 -> 4: -1.237
1 -> 0: -0.364
4 -> 1: 1.694
0 -> 4: -1.270
1 -> 0: -0.804
4 -> 0: 1.220
0 -> 4: -1.258
1 -> 0: -0.860
4 -> 1: 1.651
0 -> 4: -1.182
1 -> 4: -1.775
4 -> 1: 1.825
0 -> 4: -1.279
4 -> 0: 1.289
0 -> 4: -1.259
4 -> 0: 1.250
0 -> 4: -1.211
4 -> 0: 1.263
0 -> 4: -1.364
4 -> 0: 1.377
0 -> 4: -1.380
4 -> 0: 1.376
1 -> 0: -0.796
4 -> 1: 1.765
0 -> 4: -1.235
1 -> 0: -0.303
4 -> 1: 1.756
1 -> 0: -0.754
4 -> 0: 1.013
0 -> 1: 0.783
0 -> 4: -0.994
0 -> 4: -1.195
4 -> 0: 1.189
0 -> 4: -1.004
4 -> 0: 1.009
0 -> 4: -1.017
4 -> 0: 1.020
4 -> 0: 1.108
0 -> 4: -1.058
1 -> 4: -1.669
4 -> 3: -0.004
0 -> 4: -0.989
3 -> 0: 1.240
4 -> 3: -0.205
0 -> 4: -1.084
3 -> 0: 1.178
4 -> 3: -0.251
0 -> 4: -0.919
1 -> 0: -1.004
3 -> 1: 1.784
4 -> 3: 0.087
0 -> 4: -0.993
1 -> 4: -1.883
3 -> 0: 0.879
4 -> 3: -0.094
3 -> 0: 1.078
4 -> 3: 0.046
0 -> 4: -1.047
3 -> 0: 1.051
4 -> 3: 0.031
0 -> 4: -1.053
3 -> 0: 1.175
4 -> 3: -0.019
0 -> 4: -1.055
3 -> 0: 1.141
4 -> 3: 0.023
3 -> 0: 1.109
0 -> 4: -0.953
1 -> 0: -0.743
3 -> 0: 1.150
4 -> 3: -0.151
0 -> 4: -0.956
1 -> 4: -1.788
0 -> 4: -1.117
4 -> 0: 1.266
4 -> 0: 1.056
1 -> 0: -0.819
0 -> 4: -1.132
1 -> 0: -0.639
4 -> 1: 1.755
0 -> 4: -0.968
4 -> 0: 1.200
4 -> 0: 1.093
0 -> 4: -1.176
1 -> 4: -1.686
4 -> 1: 1.777
0 -> 4: -1.146
4 -> 0: 1.093
0 -> 4: -1.024
4 -> 0: 1.072
4 -> 0: 1.059
0 -> 4: -1.068
4 -> 0: 1.106
4 -> 0: 1.159
0 -> 4: -1.084
4 -> 0: 1.084
0 -> 4: -0.999
4 -> 0: 0.888
4 -> 0: 1.124
0 -> 4: -1.154
4 -> 0: 1.084
0 -> 4: -1.103
4 -> 0: 1.000
4 -> 0: 1.165
0 -> 4: -1.136
1 -> 0: -0.765
0 -> 1: 0.572
1 -> 0: -0.685
4 -> 1: 1.764
1 -> 0: -0.600
4 -> 1: 1.741
1 -> 0: -0.816
4 -> 1: 1.817
0 -> 4: -0.998
1 -> 0: -0.867
0 -> 4: -0.952
1 -> 4: -1.697
4 -> 1: 1.771
"""

# Parse the data
pattern = re.compile(r"(\d+)\s*->\s*(\d+):\s*(-?\d+\.\d+)")
parsed_data = pattern.findall(data)

# Store distances per ID pair
distances = defaultdict(list)
sequence_index = defaultdict(int)

for id1, id2, dist in parsed_data:
    id1, id2 = int(id1), int(id2)
    key = f"{id1}->{id2}"
    value = float(dist)
    
    # Enforce negative if id2 < id1, even if data says otherwise
    if id2 < id1:
        value = -abs(value)
    else:
        value = abs(value)
    
    distances[key].append(value)

# Plotting
plt.figure(figsize=(10, 6))
for key, values in distances.items():
    plt.plot(range(len(values)), values, marker='o', label=key)

plt.xlabel('Measurement Index')
plt.ylabel('Distance')
plt.title('Distances Between ID Pairs Over Time')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()